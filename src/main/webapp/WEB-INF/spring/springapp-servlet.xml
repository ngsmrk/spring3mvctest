<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <!-- Extract properties to application.properties -->
    <context:property-placeholder location="WEB-INF/application.properties" />

    <context:component-scan base-package="org.ngsmrk" />

    <tx:annotation-driven />

    <!-- Open Session In View Interceptor -->
    <mvc:interceptors>
        <bean class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor">
            <property name="sessionFactory">
                <ref bean="sessionFactory" />
            </property>
        </bean>
    </mvc:interceptors>

    <!--  add support for file uploads -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <!--  org.springframework.web.servlet.view.ResourceBundleViewResolver can be used as an alternative - this looks up the view definition in a properties file -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--
      - Locale resolution via cookie instead of evaluating the browser locale.
      - Locale changes will send a new cookie to the client.
    -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/>

    <!--
          - Theme resolution via cookie instead of the fixed one named "theme".
          - Theme changes will send a new cookie to the client.
        -->
    <bean id="themeResolver" class="org.springframework.web.servlet.theme.CookieThemeResolver"/>

    <!-- ResourceBundleMessageSource for messages used in JSPs -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
    </bean>

    <!-- handles exceptions -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="warnLogCategory"
                  value="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"/>
        <!--<property name="defaultErrorView" value="error" />-->
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">error</prop>
            </props>
        </property>
    </bean>

</beans>