<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">
    <!-- you need to use a version after 2.3 if you want EL to work -->

    <!-- the application context definition for the springapp DispatcherServlet  - name must match the <servlet-name>springapp</servlet-name> in the web.xml file -->

    <!-- Extract properties to application.properties -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="WEB-INF/application.properties"/>
        <!-- SYSTEM_PROPERTIES_MODE_OVERRIDE -->
        <property name="systemPropertiesMode" value="2"/>
    </bean>

    <!-- Open Session In View Interceptor -->
    <bean id="openSessionInViewInterceptor"
          class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--  not actually required but included for completeness -->
    <bean id="urlMapping" class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="openSessionInViewInterceptor"/>
            </list>
        </property>
    </bean>

    <!--  add support for file uploads -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <!-- controller -->
    <bean name="/hello.htm" class="org.ngsmrk.spring.mvc.HelloController"/>

    <!-- example simpleformcontroller -->
    <!--bean name="/test.htm" class="org.springframework.web.servlet.mvc.SimpleFormController"-->

    <bean name="/createaccount.htm" class="org.ngsmrk.spring.mvc.CreateAccountController">
        <property name="accountService" ref="accountService"/>
        <property name="formView" value="account"/>
        <property name="successView" value="account-created"/>
        <property name="commandName" value="account"/>
        <property name="commandClass" value="org.ngsmrk.spring.mvc.AccountBean"/>
        <property name="validator">
            <bean name="validator" class="org.ngsmrk.spring.mvc.AccountValidator"/>
        </property>
    </bean>

    <bean name="/updateaccount.htm" class="org.ngsmrk.spring.mvc.AccountFormController" parent="/createaccount.htm">
    </bean>

    <bean name="/adduser.htm" class="org.ngsmrk.spring.mvc.AddUserController" >
       <property name="pages">
            <list>
                <!-- follow sequence -->
                <value>userwizard/page1form</value> <!-- page1, _target0 -->
                <value>userwizard/page2form</value> <!-- page2, _target1 -->
                <value>userwizard/page3form</value> <!-- page3, _target2 -->
            </list>
       </property>
       <property name="validator">
            <bean class="org.ngsmrk.spring.mvc.UserValidator" />
       </property>
   </bean>

    <!--  org.springframework.web.servlet.view.ResourceBundleViewResolver can be used as an alternative - this looks up the view definition in a properties file -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--
      - Locale resolution via cookie instead of evaluating the browser locale.
      - Locale changes will send a new cookie to the client.
    -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/>

    <!--
          - Theme resolution via cookie instead of the fixed one named "theme".
          - Theme changes will send a new cookie to the client.
        -->
    <bean id="themeResolver" class="org.springframework.web.servlet.theme.CookieThemeResolver"/>

    <!-- ResourceBundleMessageSource for messages used in JSPs -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
    </bean>

    <!-- handles exceptions -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="warnLogCategory"
                  value="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"/>
        <!--<property name="defaultErrorView" value="error" />-->
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.Exception">error</prop>
            </props>
        </property>
    </bean>

</beans>